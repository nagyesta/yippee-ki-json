[versions]
springBoot = "2.6.7"
logback = "1.2.11"
jupiter = "5.8.2"
abortMission = "2.8.40"
lombok = "1.18.24"
wireMock = "2.27.2"
hibernateValidator = "6.2.3.Final"
javaxEl = "3.0.0"
jackson = "2.13.2"
jacksonDatabind = "2.13.2.2"
commonsCodec = "1.15"
commonsIo = "2.11.0"
commonsLang3 = "3.12.0"
guava = "31.1-jre"
javaxInject = "1"
jetbrainsAnnotations = "23.0.0"
jsonPath = "2.7.0"
jsonSchemaValidator = "1.0.69"
markdownGenerator = "1.3.1.1"
jacoco = "0.8.2"
checkstyle = "9.2.1"
jetty = "9.4.46.v20220331"
httpclient = "4.5.13"
handlebars = "4.3.0"

abortMissionPlugin = "2.2.11"
dockerPlugin = "0.32.0"
indexScanPlugin = "2.3.0"
lombokPlugin = "6.4.3"
springBootPlugin = "2.6.7"
gitVersionerPlugin = "1.6.7"
owaspPlugin = "7.1.0.1"

[libraries]
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBoot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jacksonDatabind" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "jsonPath" }
json-schema-validator = { module = "com.networknt:json-schema-validator", version.ref = "jsonSchemaValidator" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrainsAnnotations" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
commons-io = { module = "commons-io:commons-io", version.ref = "commonsIo" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
markdowngenerator = { module = "net.steppschuh.markdowngenerator:markdowngenerator", version.ref = "markdownGenerator" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
hibernate-validator = { module = "org.hibernate:hibernate-validator", version.ref = "hibernateValidator" }
javax-el-api = { module = "javax.el:javax.el-api", version.ref = "javaxEl" }
galssfish-javax-el = { module = "org.glassfish:javax.el", version.ref = "javaxEl" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
abort-mission-jupiter = { module = "com.github.nagyesta.abort-mission.boosters:abort.booster-junit-jupiter", version.ref = "abortMission" }
wiremock = { module = "com.github.tomakehurst:wiremock", version.ref = "wireMock" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "jetty" }
jetty-servlets = { module = "org.eclipse.jetty:jetty-servlets", version.ref = "jetty" }
jetty-proxy = { module = "org.eclipse.jetty:jetty-proxy", version.ref = "jetty" }
jetty-webapp = { module = "org.eclipse.jetty:jetty-webapp", version.ref = "jetty" }
httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "httpclient" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
handlebars = { module = "com.github.jknack:handlebars", version.ref = "handlebars" }

[bundles]
spring-boot = ["spring-boot-starter", "spring-boot-starter-validation"]
json = ["jackson-databind", "jackson-dataformat-yaml", "json-path", "json-schema-validator"]
logback = ["logback-classic", "logback-core"]
validation = ["hibernate-validator", "javax-el-api", "galssfish-javax-el"]
wiremock = [
    "wiremock", "jetty-server", "jetty-servlet", "jetty-servlets", "jetty-proxy",
    "jetty-webapp", "httpclient", "commons-codec", "handlebars"
]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBootPlugin" }
lombok = { id = "io.freefair.lombok", version.ref = "lombokPlugin" }
abort-mission = { id = "com.github.nagyesta.abort-mission-gradle-plugin", version.ref = "abortMissionPlugin" }
versioner = { id = "io.toolebox.git-versioner", version.ref = "gitVersionerPlugin" }
index-scan = { id = "org.sonatype.gradle.plugins.scan", version.ref = "indexScanPlugin" }
owasp-dependencycheck = { id = "org.owasp.dependencycheck", version.ref = "owaspPlugin" }
