plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'maven-publish'
    //noinspection SpellCheckingInspection
    id "io.freefair.lombok" version "5.1.0"
    //noinspection SpellCheckingInspection
    id "io.toolebox.git-versioner" version "1.5.0"
}

group = 'com.github.nagyesta'
//noinspection GroovyUnusedAssignment
sourceCompatibility = '11'

project.ext {
    //noinspection GroovyAssignabilityCheck
    gitToken = project.hasProperty('githubToken') ? (project.property('githubToken') as String) : ''
    //noinspection GroovyAssignabilityCheck
    gitUser = project.hasProperty('githubUser') ? (project.property('githubUser') as String) : ''
}

versioner {
    startFrom {
        major = 0
        minor = 9
        patch = 0
    }
    pattern {
        pattern = "%M.%m.%p(.%c)"
    }
    git {
        authentication {
            https {
                token = project.ext.gitToken
            }
        }
    }
    tag {
        prefix = 'v'
        useCommitMessage = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.jayway.jsonpath:json-path'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.glassfish:javax.el'
    implementation 'javax.el:javax.el-api'
    implementation 'commons-io:commons-io'
    implementation 'com.google.guava:guava'
    implementation 'org.jetbrains:annotations'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    implementation {
        dependencies {
            dependency 'javax.el:javax.el-api:3.0.0'
            dependency 'org.glassfish:javax.el:3.0.0'
            dependency 'com.jayway.jsonpath:json-path:2.4.0'
            dependency 'org.jetbrains:annotations:19.0.0'
            dependency 'commons-io:commons-io:2.6'
            dependency 'com.google.guava:guava:29.0-jre'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("$buildDir/reports/jacoco/report.xml")
        csv.enabled false
        html.enabled true
    }
}

test {
    useJUnitPlatform()
}
test.finalizedBy jacocoTestReport
jacocoTestReport.finalizedBy jacocoTestCoverageVerification

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
            excludes = [
                    'com.github.nagyesta.yippeekijson.core.config.parser.JsonMapper'
            ]
        }
    }
}
bootJar.dependsOn check

versioner.apply()

bootJar {
    archiveVersion.value(project.version as String)
}

task systemTestRun(type: Exec) {
    inputs.file(file(bootJar.outputs.files.singleFile))
    inputs.file(file("./src/test/resources/json/example.json"))
    inputs.file(file("./src/test/resources/yaml/example.yml"))
    outputs.file(file("./build/test-results/systemTest/example.json"))
    dependsOn bootJar

    group = "Execution"
    description = "Run the output executable jar with ExecTask"
    commandLine "java", "-jar", bootJar.outputs.files.singleFile,
            "--yippee.config=./src/test/resources/yaml/example.yml",
            "--yippee.input=./src/test/resources/json/example.json",
            "--yippee.output=./build/test-results/systemTest/example.json",
            "--yippee.action=split-name"
    logging.captureStandardOutput LogLevel.INFO
    logging.captureStandardError LogLevel.ERROR
}
task systemTest {
    dependsOn systemTestRun
    inputs.file(file("./build/test-results/systemTest/example.json"))
    inputs.file(file("./src/test/resources/json/example-split.json"))
    doLast {
        if (file("./build/test-results/systemTest/example.json").text != file("./src/test/resources/json/example-split.json").text) {
            throw new StopExecutionException("System test assertion failed.")
        }
    }
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile(rootProject.file('config/checkstyle/checkstyle-stylesheet.xsl'))
    }
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/nagyesta/yippee-ki-json")
            credentials {
                username = project.ext.gitUser
                password = project.ext.gitToken
            }
        }
    }
    publications {
        //noinspection GroovyAssignabilityCheck
        bootJava(MavenPublication) {
            //noinspection GroovyAssignabilityCheck
            artifact bootJar
            pom {
                //noinspection GroovyAssignabilityCheck
                name = 'Yippee-Ki-JSON'
                //noinspection GroovyAssignabilityCheck
                description = 'A minimal JSON manipulation app built on Spring Boot and JSON Path.'
                //noinspection GroovyAssignabilityCheck
                url = 'https://github.com/nagyesta/yippee-ki-json'
                licenses {
                    license {
                        //noinspection GroovyAssignabilityCheck
                        name = 'MIT License'
                        //noinspection GroovyAssignabilityCheck
                        url = 'https://raw.githubusercontent.com/nagyesta/yippee-ki-json/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        //noinspection GroovyAssignabilityCheck
                        id = 'nagyesta'
                        //noinspection GroovyAssignabilityCheck
                        name = 'Istvan Zoltan Nagy'
                    }
                }
            }
        }
    }
}