{
  "$id": "https://github.com/nagyesta/yippee-ki-json/blob/main/schema/yippee-ki-json_config_function-type.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions",
  "definitions": {
    "functionChangeCase": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#change-case-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "changeCase",
          "description": "The name of the function."
        },
        "to": {
          "type": "string",
          "enum": [
            "CAPITALIZED",
            "UNCAPITALIZED",
            "LOWER_CASE",
            "UPPER_CASE"
          ],
          "description": "The type of case transformation we want to execute."
        }
      },
      "required": [
        "name",
        "to"
      ],
      "minProperties": 2,
      "maxProperties": 2,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionCloneKey": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#clone-key-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "cloneKey",
          "description": "The name of the function."
        },
        "from": {
          "type": "string",
          "pattern": "^[a-zA-Z]+[a-zA-Z0-9\\-_]+$",
          "description": "The name of the key we want to clone from."
        },
        "to": {
          "type": "string",
          "pattern": "^[a-zA-Z]+[a-zA-Z0-9\\-_]+$",
          "description": "The name of the destination key we want to use."
        }
      },
      "required": [
        "name",
        "from",
        "to"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionAdd": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#decimal-add-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "add",
          "description": "The name of the function."
        },
        "operand": {
          "type": "number",
          "description": "The numerical value we want to use as operand."
        },
        "scale": {
          "type": "integer",
          "description": "The scale of the result we want to see once the calculation is done."
        }
      },
      "required": [
        "name",
        "operand",
        "scale"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionDivide": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#decimal-divide-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "divide",
          "description": "The name of the function."
        },
        "operand": {
          "type": "number",
          "description": "The numerical value we want to use as operand."
        },
        "scale": {
          "type": "integer",
          "description": "The scale of the result we want to see once the calculation is done."
        }
      },
      "required": [
        "name",
        "operand",
        "scale"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionMultiply": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#decimal-multiply-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "multiply",
          "description": "The name of the function."
        },
        "operand": {
          "type": "number",
          "description": "The numerical value we want to use as operand."
        },
        "scale": {
          "type": "integer",
          "description": "The scale of the result we want to see once the calculation is done."
        }
      },
      "required": [
        "name",
        "operand",
        "scale"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionSubtract": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#decimal-subtract-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "subtract",
          "description": "The name of the function."
        },
        "operand": {
          "type": "number",
          "description": "The numerical value we want to use as operand."
        },
        "scale": {
          "type": "integer",
          "description": "The scale of the result we want to see once the calculation is done."
        }
      },
      "required": [
        "name",
        "operand",
        "scale"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionEpochMillisDateAdd": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#epoch-millis-date-add-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "epochMillisDateAdd",
          "description": "The name of the function."
        },
        "amount": {
          "type": "integer",
          "description": "The amount of time we want to apply as adjustment."
        },
        "unit": {
          "type": "string",
          "enum": [
            "NANOS",
            "MICROS",
            "MILLIS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "HALF_DAYS",
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS",
            "DECADES",
            "CENTURIES",
            "MILLENIA"
          ],
          "description": "The unit of the adjustment we want to apply."
        }
      },
      "required": [
        "name",
        "amount",
        "unit"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionReplace": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#literal-replace-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "replace",
          "description": "The name of the function."
        },
        "find": {
          "type": "string",
          "description": "The value which needs to be replaced (all occurrences)."
        },
        "replace": {
          "type": "string",
          "description": "The value which needs to be used as replacement (for all occurrences)."
        }
      },
      "required": [
        "name",
        "find",
        "replace"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionRegex": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#regex-replace-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "regex",
          "description": "The name of the function."
        },
        "pattern": {
          "type": "string",
          "description": "The regular expression we want to use for matching, capturing named groups."
        },
        "replacement": {
          "type": "string",
          "description": "The replacement format we want to use allowing EL-like placeholders for the captured groups."
        }
      },
      "required": [
        "name",
        "pattern",
        "replacement"
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "uniqueItems": true,
      "additionalProperties": false
    },
    "functionStringDateAdd": {
      "type": "object",
      "$comment": "https://github.com/nagyesta/yippee-ki-json/wiki/Built-in-functions#string-date-add-function",
      "properties": {
        "name": {
          "type": "string",
          "const": "stringDateAdd",
          "description": "The name of the function."
        },
        "formatter": {
          "$comment": "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html",
          "type": "string",
          "description": "The date time format we want to use for parsing.",
          "default": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "amount": {
          "type": "integer",
          "description": "The amount of time we want to apply as adjustment."
        },
        "unit": {
          "type": "string",
          "enum": [
            "NANOS",
            "MICROS",
            "MILLIS",
            "SECONDS",
            "MINUTES",
            "HOURS",
            "HALF_DAYS",
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS",
            "DECADES",
            "CENTURIES",
            "MILLENIA"
          ],
          "description": "The unit of the adjustment we want to apply."
        }
      },
      "required": [
        "name",
        "amount",
        "unit",
        "formatter"
      ],
      "minProperties": 4,
      "maxProperties": 4,
      "uniqueItems": true,
      "additionalProperties": false
    }
  },
  "allOf": [
    {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "changeCase",
            "cloneKey",
            "add",
            "divide",
            "multiply",
            "subtract",
            "epochMillisDateAdd",
            "replace",
            "regex",
            "stringDateAdd"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "changeCase"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionChangeCase"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "cloneKey"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionCloneKey"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "add"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionAdd"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "divide"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionDivide"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "multiply"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionMultiply"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "subtract"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionSubtract"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "epochMillisDateAdd"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionEpochMillisDateAdd"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "replace"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionReplace"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "regex"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionRegex"
      }
    },
    {
      "if": {
        "properties": {
          "name": {
            "const": "stringDateAdd"
          }
        }
      },
      "then": {
        "$ref": "#/definitions/functionStringDateAdd"
      }
    }
  ]
}