actions:
  - name: "validate"
    rules:
      - name: "validate"
        path: "$"
        params:
          onFailure:
            transformation: SKIP_REST
            violation: COMMENT_JSON
          schema:
            name: "jsonSchema"
            source:
              name: "file"
              path: "build/test-results/systemTest/example.json"
  - name: "demo"
    rules:
      - name: "add"
        path: "$..a"
        params:
          key:
            name: "staticString"
            value: "key"
          value:
            name: "converting"
            stringSource:
              name: "httpResource"
              uri: "http://localhost/"
              httpMethod: "GET"
              httpHeaders:
                Accept: "application/json"
                User-Agent: "Yippee-Ki-JSON"
              charset: "UTF-8"
            converter:
              name: "jsonParse"
      - name: "add"
        path: "$..a"
        params:
          key:
            name: "staticString"
            value: "key"
          value:
            name: "staticJson"
            value: '{"name":"value"}'
      - name: "calculate"
        path: "$[*]"
        params:
          numberFunction:
            name: "add"
            operand: 42.00
            scale: 1
      - name: "copy"
        path: "$.accounts[0].name"
        params:
          key:
            name: "staticString"
            value: "firstName"
          to:
            value: "$.accounts[0]"
      - name: "deleteFrom"
        path: "$.accounts[1].name"
        params:
          predicate:
            name: "notNull"
          keepKey:
            name: "allMatch"
            from:
              - name: "regex"
                pattern: .{0,10}
              - name: "anyString"
          keepValue:
            name: "noneMatch"
            from:
              - name: "isNull"
          deleteKey:
            name: "anyMatch"
            from:
              - name: "isNull"
          deleteValue:
            name: "evalOn"
            childPath: "node.child"
            predicate:
              name: SpEL
              expression: "T(java.util.Objects).isNull(#root)"
      - name: "rename"
        path: "$"
        params:
          oldKey:
            name: "staticString"
            value: "name"
          newKey:
            name: "staticString"
            value: "new"
      - name: "replace"
        path: "$.accounts..name"
        params:
          stringFunction:
            name: "regex"
            pattern: ^((?<firstName>[A-Za-z\-]+) (?<lastName>[A-Za-z\-]+))$
            replacement: "${lastName}"
          predicate:
            name: "anyString"
      - name: "replace"
        path: "$.accounts..name.jsonref"
        params:
          stringFunction:
            name: "httpResourceByUri"
            uriFunction:
              name: regex
              pattern: ^(?<path>[A-Za-z0-9\-\.]+\.json)$
              replacement: "http://localhost/${path}"
          predicate:
            name: "anyString"
      - name: "replaceMap"
        path: "$.accounts..firstName"
        params:
          predicate:
            name: "containsKey"
            key: "source"
          mapFunction:
            name: "cloneKey"
            from: "source"
            to: "destination"
      - name: "validate"
        path: "$"
        params:
          schema:
            name: "jsonSchema"
            source:
              name: "file"
              path: "./schema.json"
          onFailure:
            transformation: "SKIP_REST"
            violation: "COMMENT_JSON"
      - name: "validate"
        path: "$"
        params:
          schema:
            name: "jsonSchema"
            source:
              name: "schemaStore"
              schemaName: "Yippee-Ki-JSON configuration YML"
          onFailure:
            transformation: "SKIP_REST"
            violation: "COMMENT_JSON"
      - name: "validate"
        path: "$"
        params:
          schema:
            name: "jsonSchema"
            source:
              name: "httpResource"
              uri: "http://localhost/"
              httpMethod: "GET"
              httpHeaders:
                Accept: "application/json"
                User-Agent: "Yippee-Ki-JSON"
              charset: "UTF-8"
          onFailure:
            transformation: "SKIP_REST"
            violation: "COMMENT_JSON"
